// --------------------------------------------------------------------------
//   Mixins
// --------------------------------------------------------------------------

// Color
// ------------------------------------------------------------

=colors($color_text, $color_background, $color_border)
  color: $color_text
  background-color: $color_background
  border-color: $color_border

// Font
// ------------------------------------------------------------

=font($font-family, $font-size, $font-style: normal, $font-weight: normal)
  font-family: $font-family, $base-font
  font-style: $font-style
  font-weight: $font-weight
  font-size: $font-size

=font-family($font-family)
  font-family: $font-family, $base-font

// Font Smoothing
// ------------------------------------------------------------

=font-smoothing($value: on)
  @if $value == on
    -webkit-font-smoothing: antialiased
    -moz-osx-font-smoothing: grayscale
  @else
    -webkit-font-smoothing: subpixel-antialiased
    -moz-osx-font-smoothing: auto

.dark-on-light
  +font-smoothing(off)

.light-on-dark
  +font-smoothing(on)

// Icons
// ------------------------------------------------------------

=icon($icon)
  font: 100%/1 'icomoon'
  //noinspection CssUnknownProperty
  speak: none
  text-transform: none
  -webkit-font-smoothing: antialiased
  @extend #{$icon}

// Border Radius
// ------------------------------------------------------------

=border-radius($radius)
  -moz-border-radius: $radius
  -webkit-border-radius: $radius
  -ms-border-radius: $radius
  border-radius: $radius

// Box shadow
// ------------------------------------------------------------

=box-shadow($shadows)
  -moz-box-shadow: $shadows
  -webkit-box-shadow: $shadows
  box-shadow: $shadows

// Cols
// ------------------------------------------------------------

=min-max-screen($res-min, $res-max)
  @media screen and (min-width: $res-min) and (max-width: $res-max)
    @content

@for $i from 1 through $cols
  $cols-width: 100 / $cols * $i * 1% !important

  .w-#{$i}
    width: $cols-width

  +min-screen($mq-0)
    .w-xs-#{$i}
      width: $cols-width

  +min-screen($mq-sm)
    .w-sm-#{$i}
      width: $cols-width

    [class*='w-xs-']
      &.w-sm-#{$i}
        width: $cols-width

  +min-screen($mq-md)
    .w-md-#{$i}
      width: $cols-width

    [class*='w-xs-'], [class*='w-sm-']
      &.w-md-#{$i}
        width: $cols-width

    [class*='w-xs-']
      &[class*='w-sm-']
        &.w-md-#{$i}
          width: $cols-width

  +min-screen($mq-lg)
    .w-lg-#{$i}
      width: $cols-width

    [class*='w-xs-'], [class*='w-sm-'], [class*='w-md-']
      &.w-lg-#{$i}
        width: $cols-width

    [class*='w-xs-']
      &[class*='w-sm-']
        &.w-lg-#{$i}
          width: $cols-width

    [class*='w-xs-']
      &[class*='w-md-']
        &.w-lg-#{$i}
          width: $cols-width

    [class*='w-sm-']
      &[class*='w-md-']
        &.w-lg-#{$i}
          width: $cols-width

    [class*='w-xs-']
      &[class*='w-sm-']
        &[class*='w-md-']
          &.w-lg-#{$i}
            width: $cols-width

.col
  float: left
  +padding(0 15px)

// Last Col
// ------------------------------------------------------------

=last_item($nth)
  &:nth-child(#{$nth})
    clear: left

// Size
// ------------------------------------------------------------

=size($width, $height: $width)
  width: $width
  height: $height

// Equal Columns
// ------------------------------------------------------------

=equal_height($target)
  &
    overflow: hidden !important
  #{$target}
    height: 100% !important
    margin-bottom: -9999px !important
    padding-bottom: 9999px !important

=display_table($target)
  #{$target}
    display: table
    +padding(null 0)

=display_table_row($target)
  #{$target}
    display: table-row

=display_table_cell($target)
  #{$target}
    display: table-cell
    float: none

// Boxed & Unboxed Layout
// ------------------------------------------------------------

=boxed
  &
    max-width: $layout_max_width
    +margin(0 auto)

=unboxed
  &
    width: 100%
    max-width: 100%

=full-width
  &
    width: 100%
    max-width: 100%
    .container-fluid
      max-width: 100% !important

// Calculate Dynamic Size
// ------------------------------------------------------------

=calculate_width($size)
  .dynamic-width#{$size}
    width: $size * 1px

=dynamic_width($size-list)
  @each $size in $size-list
    +calculate_width($size)

// Vertically align an element

=vertical-center
  +position(relative, 50% null null null)
  transform: translateY(-50%)

// Rem
// ------------------------------------------------------------

=rem($property, $values)
  $px: ()
  /* 3
  $rem: ()
  /* 3
  @each $value in $values
    /* 4
    @if $value == 0 or $value == auto
      /* 5
      $px: append($px, $value)
      $rem: append($rem, $value)
    @else
      $unit: unit($value)
      /* 6
      $val: parse_int($value)
      /* 6
      @if $unit == "px"
        /* 7
        $px: append($px, $value)
        $rem: append($rem, $val / 10 + rem)
      @if $unit == "rem"
        /* 7
        $px: append($px, $val * 10 + px)
        $rem: append($rem, $value)
  @if $px == $rem
    /* 8
    #{$property}: $px
    /* 9
  @else
    #{$property}: $px
    /* 9
    #{$property}: $rem
/* 9


=calc_dynamic_width($property, $expression)
  #{$property}: -webkit-calc(#{$expression})
  #{$property}: calc(#{$expression})

=border($width, $style, $color)
  border-width: $width
  border-style: $style
  border-color: $color